generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "relationJoins"]
}

generator typegraphql {
  provider        = "typegraphql-prisma"
  emitOnly        = ["enums", "models", "relationResolvers"]
  simpleResolvers = true
  useSimpleInputs = true
  emitIdAsIDType  = true
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES")
}

model User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Primary identifier from Farcaster
  fid Int @id @unique

  // Basic user data
  username     String?
  displayName  String?
  custodyAddress String?
  pfpUrl       String?
  
  // Profile data
  bioText      String?
  locationCity String?
  locationState String?
  locationStateCode String?
  locationCountry String?
  locationCountryCode String?
  bannerUrl    String?
  
  // Counts and metrics
  followerCount  Int?
  followingCount Int?
  score         Float?
  neynarUserScore Float?
  powerBadge    Boolean @default(false)
  
  // Verification data  
  verifications String[] // Array of verified addresses
  ethAddresses  String[] // Verified Ethereum addresses
  solAddresses  String[] // Verified Solana addresses
  primaryEthAddress String?
  primarySolAddress String?
  
  // Verified accounts on other platforms
  verifiedAccounts Json? // Store as JSON for flexibility
  
  // Pro status
  proStatus     String? // "active", "inactive", etc.
  proSubscribedAt DateTime?
  proExpiresAt   DateTime?
  
  // Hub and sync metadata
  lastSynced   DateTime @default(now())
  syncSource   String @default("neynar") // "neynar", "hub", "manual"
  isActive     Boolean @default(true)
  
  // Relations
  casts        Cast[]
  
  @@map("users")
}

model Cast {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Primary identifiers
  hash      String @id // Hex representation of the cast hash
  fid       Int        // Author's FID
  
  // Cast content
  text           String
  originalText   String  // Text before username reconstruction
  mentions       Int[]   // Array of mentioned FIDs
  mentionsPositions Int[] // Positions of mentions in text
  
  // Cast metadata
  timestamp      DateTime // Farcaster timestamp
  messageType    String   // Message type from hub
  
  // Parent/reply information
  parentCastFid  Int?
  parentCastHash String?
  
  // Embed information (URLs, quoted casts, etc.)
  embeds         Json?    // Store embeds as JSON
  
  // Processing metadata
  processedBy    String?  // Which system processed this cast
  isReply        Boolean  @default(false)
  isQuoteCast    Boolean  @default(false)
  isMention      Boolean  @default(false)
  
  // Relations
  author         User     @relation(fields: [fid], references: [fid])
  
  @@map("casts")
  @@index([fid])
  @@index([timestamp])
  @@index([parentCastFid, parentCastHash])
}